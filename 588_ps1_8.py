# -*- coding: utf-8 -*-
"""588_ps1_8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_CjDsPHxalFc90aU79J_4L8UnfaPZOWz
"""

## Importing packages 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import random
import statsmodels.api as sm

"""### Problem 8

"""

mu = 0
sigma = .1 
e = np.random.normal(mu, sigma, 1000)
X = np.random.rand(1000, 2)
y = np.random.rand(1000, 1)
x1 = X[:,:1]
x2 = X[:,1:]

|sm.add_constant(X)

finished = sm.OLS(y,X).fit()
print(finished.summary())

sm.add_constant(x1)
finish = sm.OLS(x1, x2)
x_1t = finished.resid

sm.add_constant(x_1t)
finished = sm.OLS(y, x_1t).fit()
print(finished.summary())

"""### Problem 9"""

from scipy.stats import norm
def find_n():
    n = 0
    for i in range(1000):
        n += 1 
        se = ((1/n)*(1-.01))
        prob = norm.cdf(-1.96 - (.1/se)) + (1 - norm.cdf(1.96 - (.1/se)))

        if prob >= .8:

            break 
    return n

find_n()





